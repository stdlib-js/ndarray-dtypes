{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/assign.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dtypeStrings = require( '@stdlib/ndarray-base-dtype-strings' );\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types.\n*\n* @param {string} [kind] - data type kind\n* @returns {Array<string>} list of ndarray data types\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* var list = dtypes( 'floating_point' );\n* // returns [...]\n*/\nfunction dtypes() {\n\tif ( arguments.length ) {\n\t\treturn dtypeStrings( arguments[ 0 ] );\n\t}\n\treturn dtypeStrings();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils-keys' );\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nmodule.exports = assign;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types.\n*\n* @module @stdlib/ndarray-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/ndarray-dtypes' );\n*\n* var list = dtypes();\n* // returns [...]\n*/\n\n// MODULES //\n\nvar dtypeObjects = require( '@stdlib/ndarray-base-dtype-objects' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nassign( main, dtypeObjects() );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"float64\": \"main.float64\", \"float32\": \"main.float32\", \"float16\": \"main.float16\", \"complex128\": \"main.complex128\", \"complex64\": \"main.complex64\", \"complex32\": \"main.complex32\", \"int32\": \"main.int32\", \"int16\": \"main.int16\", \"int8\": \"main.int8\", \"uint32\": \"main.uint32\", \"uint16\": \"main.uint16\", \"uint8\": \"main.uint8\", \"uint8c\": \"main.uint8c\", \"bool\": \"main.bool\", \"binary\": \"main.binary\", \"generic\": \"main.generic\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,oCAAqC,EAmBjE,SAASC,GAAS,CACjB,OAAK,UAAU,OACPD,EAAc,UAAW,CAAE,CAAE,EAE9BA,EAAa,CACrB,CAKAD,EAAO,QAAUE,ICnDjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,yCAA0C,EACjEC,EAAa,QAAS,oBAAqB,EA4B/C,SAASC,EAAQC,EAAQC,EAAS,CACjC,IAAIC,EACAC,EACAC,EAGJ,IADAF,EAAOJ,EAAYG,CAAO,EACpBG,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAC7BD,EAAID,EAAME,CAAE,EACZP,EAAaG,EAAQG,EAAGF,EAAQE,CAAE,CAAE,EAErC,OAAOH,CACR,CAKAJ,EAAO,QAAUG,ICjCjB,IAAIM,EAAe,QAAS,oCAAqC,EAC7DC,EAAO,IACPC,EAAS,IAKbA,EAAQD,EAAMD,EAAa,CAAE,EAK7B,OAAO,QAAUC",
  "names": ["require_main", "__commonJSMin", "exports", "module", "dtypeStrings", "dtypes", "require_assign", "__commonJSMin", "exports", "module", "setReadOnly", "objectKeys", "assign", "target", "source", "keys", "k", "i", "dtypeObjects", "main", "assign"]
}
