{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/assign.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport dtypeStrings from '@stdlib/ndarray-base-dtype-strings';\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types.\n*\n* @param {string} [kind] - data type kind\n* @returns {Array<string>} list of ndarray data types\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* var list = dtypes( 'floating_point' );\n* // returns [...]\n*/\nfunction dtypes() {\n\tif ( arguments.length ) {\n\t\treturn dtypeStrings( arguments[ 0 ] );\n\t}\n\treturn dtypeStrings();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport objectKeys from '@stdlib/utils-keys';\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types.\n*\n* @module @stdlib/ndarray-dtypes\n*\n* @example\n* import dtypes from '@stdlib/ndarray-dtypes';\n*\n* var list = dtypes();\n* // returns [...]\n*/\n\n// MODULES //\n\nimport dtypeObjects from '@stdlib/ndarray-base-dtype-objects';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nassign( main, dtypeObjects() );\n\n\n// EXPORTS //\n\nexport default main;\n\n// exports: { \"float64\": \"main.float64\", \"float32\": \"main.float32\", \"float16\": \"main.float16\", \"complex128\": \"main.complex128\", \"complex64\": \"main.complex64\", \"complex32\": \"main.complex32\", \"int32\": \"main.int32\", \"int16\": \"main.int16\", \"int8\": \"main.int8\", \"uint32\": \"main.uint32\", \"uint16\": \"main.uint16\", \"uint8\": \"main.uint8\", \"uint8c\": \"main.uint8c\", \"bool\": \"main.bool\", \"binary\": \"main.binary\", \"generic\": \"main.generic\" }\n"],"names":["dtypes","arguments","length","dtypeStrings","target","source","keys","k","i","objectKeys","setReadOnly","assign","main","dtypeObjects"],"mappings":";;2XAyCA,SAASA,IACR,OAAKC,UAAUC,OACPC,EAAcF,UAAW,IAE1BE,GACR,ECKA,SAAiBC,EAAQC,GACxB,IAAIC,EACAC,EACAC,EAGJ,IADAF,EAAOG,EAAYJ,GACbG,EAAI,EAAGA,EAAIF,EAAKJ,OAAQM,IAC7BD,EAAID,EAAME,GACVE,EAAaN,EAAQG,EAAGF,EAAQE,GAGlC,CCrBAI,CAAAC,EAAAC"}